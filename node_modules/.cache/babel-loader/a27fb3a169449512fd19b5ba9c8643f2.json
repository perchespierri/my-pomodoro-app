{"ast":null,"code":"var _jsxFileName = \"/home/perchespierri/Code Projects/pomodoro-timer/my-pomodoro-app/src/components/countTo/FormCountTo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport styled from 'styled-components';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n_c = Container;\nconst Input = styled.input`\n  margin: 0px 5px;\n  font-size: 20px;\n  padding: 5px;\n`;\n_c2 = Input;\nconst Text = styled.div`\n  margin: 5px 5px;\n  font-size: 20px;\n`;\n_c3 = Text;\nexport const Form = _ref => {\n  _s();\n\n  let {\n    setTimeLeft,\n    setIsPaused\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = _ref2 => {\n    let {\n      timerInput\n    } = _ref2;\n    const dateInput = new Date(timerInput).getTime();\n    const dateNow = new Date().getTime();\n    const deltaDate = dateInput - dateNow;\n    console.log(deltaDate);\n    $(\"#pomodoro-form\").trigger(\"reset\");\n    setTimeLeft(deltaDate * 0.001);\n    setIsPaused(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: \"Count to:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit(onSubmit),\n        id: \"pomodoro-form\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"datetime-local\",\n          name: \"time\",\n          id: \"time-input\",\n          ...register('timerInput', {\n            required: {\n              value: true,\n              message: \"Please enter a time\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        errors: errors,\n        name: \"timerInput\",\n        render: _ref3 => {\n          let {\n            message\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 36\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"2/YRDximMa3vxdhPNR6BzVqbrkA=\", false, function () {\n  return [useForm];\n});\n\n_c4 = Form;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Text\");\n$RefreshReg$(_c4, \"Form\");","map":{"version":3,"sources":["/home/perchespierri/Code Projects/pomodoro-timer/my-pomodoro-app/src/components/countTo/FormCountTo.js"],"names":["React","useForm","ErrorMessage","styled","$","Container","div","Input","input","Text","Form","setTimeLeft","setIsPaused","register","handleSubmit","formState","errors","onSubmit","timerInput","dateInput","Date","getTime","dateNow","deltaDate","console","log","trigger","required","value","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA,CAHA;KAAMD,S;AAKN,MAAME,KAAK,GAAGJ,MAAM,CAACK,KAAM;AAC3B;AACA;AACA;AACA,CAJA;MAAMD,K;AAMN,MAAME,IAAI,GAAGN,MAAM,CAACG,GAAI;AACxB;AACA;AACA,CAHA;MAAMG,I;AAMN,OAAO,MAAMC,IAAI,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAA+B;AAClD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD;AAArC,MAAkDf,OAAO,EAA/D;;AAEA,QAAMgB,QAAQ,GAAG,SAAkB;AAAA,QAAjB;AAACC,MAAAA;AAAD,KAAiB;AACjC,UAAMC,SAAS,GAAG,IAAIC,IAAJ,CAASF,UAAT,EAAqBG,OAArB,EAAlB;AACA,UAAMC,OAAO,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAAhB;AACA,UAAME,SAAS,GAAGJ,SAAS,GAAGG,OAA9B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAnB,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBsB,OAApB,CAA4B,OAA5B;AACAf,IAAAA,WAAW,CAACY,SAAS,GAAC,KAAX,CAAX;AACAX,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GARD;;AAUA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAEE,YAAY,CAACG,QAAD,CAAvC;AAAmD,QAAA,EAAE,EAAC,eAAtD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,gBADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAC,YAHL;AAAA,aAIMJ,QAAQ,CAAC,YAAD,EAAe;AACzBc,YAAAA,QAAQ,EAAE;AAACC,cAAAA,KAAK,EAAE,IAAR;AAAcC,cAAAA,OAAO,EAAE;AAAvB;AADe,WAAf;AAJd;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,MAAM,EAAEb,MADV;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,MAAM,EAAE;AAAA,cAAC;AAAEa,YAAAA;AAAF,WAAD;AAAA,8BAAiB;AAAA,sBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAAjB;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAyBD,CAtCM;;GAAMnB,I;UAC6CT,O;;;MAD7CS,I","sourcesContent":["import React from 'react'\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport styled from 'styled-components';\nimport $ from 'jquery';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Input = styled.input`\n  margin: 0px 5px;\n  font-size: 20px;\n  padding: 5px;\n`;\n\nconst Text = styled.div`\n  margin: 5px 5px;\n  font-size: 20px;\n`;\n\n\nexport const Form = ({setTimeLeft, setIsPaused}) => {\n  const { register, handleSubmit, formState: {errors} } = useForm();\n\n  const onSubmit = ({timerInput}) => {\n    const dateInput = new Date(timerInput).getTime();\n    const dateNow = new Date().getTime();\n    const deltaDate = dateInput - dateNow;\n    console.log(deltaDate);\n    $(\"#pomodoro-form\").trigger(\"reset\");\n    setTimeLeft(deltaDate*0.001);\n    setIsPaused(false);\n  };\n\n  return (\n    <>  \n      <Container>\n        <Text>Count to:</Text>\n        <form noValidate onSubmit={handleSubmit(onSubmit)} id=\"pomodoro-form\" >\n          <Input \n            type=\"datetime-local\"\n            name=\"time\"\n            id=\"time-input\"\n            {...register('timerInput', {\n              required: {value: true, message: \"Please enter a time\"},\n            })} \n          />\n          <Input type=\"submit\" />\n        </form>\n      </Container>\n      <div align='center'>\n        <ErrorMessage\n          errors={errors}\n          name=\"timerInput\"\n          render={({ message }) => <p>{message}</p>}\n        />\n      </div>\n    </>        \n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}