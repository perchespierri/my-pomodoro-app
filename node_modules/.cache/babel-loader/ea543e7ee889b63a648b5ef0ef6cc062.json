{"ast":null,"code":"var _jsxFileName = \"/home/perchespierri/Code Projects/pomodoro-timer/my-pomodoro-app/src/components/countTo/TimerCountTo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport Block from './BlockCountTo';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n_c = Container;\nconst Text = styled.h1`\n  font-size: 40px;\n`;\n_c2 = Text;\nconst Button = styled.button`\n  font-size: 20px;\n`;\n_c3 = Button;\nexport const Timer = _ref => {\n  _s();\n\n  let {\n    timeLeft,\n    setTimeLeft,\n    isPaused,\n    setIsPaused\n  } = _ref;\n  // timeLeft is in seconds\n  let days = Math.floor(timeLeft / 3600 / 24);\n  let hours = Math.floor(timeLeft / 3600 - days * 24);\n  let minutes = Math.floor((timeLeft - hours * 3600 - days * 24 * 60) / 60);\n  let seconds = Math.floor(timeLeft - hours * 3600 - 60 * minutes - days * 24 * 3600);\n  let intervalRef = useRef();\n  useEffect(() => {\n    const id = setInterval(() => {\n      isPaused ? clearInterval(intervalRef.current) : setTimeLeft(timeLeft - 1);\n    }, 1000);\n    intervalRef.current = id;\n    return () => clearInterval(intervalRef.current);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Block, {\n        param: \"Days\",\n        number: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        param: \"Hours\",\n        number: hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        param: \"Minutes\",\n        number: minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        param: \"Seconds\",\n        number: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setTimeLeft(0);\n          setIsPaused(true);\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Timer, \"AcQ1i4tD0owQ+S+iAErNNAWnC24=\");\n\n_c4 = Timer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Text\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"Timer\");","map":{"version":3,"sources":["/home/perchespierri/Code Projects/pomodoro-timer/my-pomodoro-app/src/components/countTo/TimerCountTo.js"],"names":["React","useEffect","useRef","Block","styled","Container","div","Text","h1","Button","button","Timer","timeLeft","setTimeLeft","isPaused","setIsPaused","days","Math","floor","hours","minutes","seconds","intervalRef","id","setInterval","clearInterval","current"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Block from './BlockCountTo';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.h1`\n  font-size: 40px;\n`;\n\nconst Button = styled.button`\n  font-size: 20px;\n`;\n\n\nexport const Timer = ({timeLeft, setTimeLeft, isPaused, setIsPaused}) => {\n  // timeLeft is in seconds\n  let days = Math.floor(timeLeft/3600/24);\n  let hours = Math.floor(timeLeft/3600 - days*24 );\n  let minutes = Math.floor((timeLeft - hours*3600 - days*24*60)/60);\n  let seconds = Math.floor(timeLeft - hours * 3600 - 60 * minutes - days*24*3600);\n\n  let intervalRef = useRef();\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      isPaused ? \n        clearInterval(intervalRef.current) :\n        setTimeLeft(timeLeft - 1);\n    }, 1000)\n    intervalRef.current = id;\n    return () => clearInterval(intervalRef.current);\n  });\n\n\n  return (\n    <>\n      <Container>\n      <Block param=\"Days\" number={days} />\n          <Text>:</Text>\n        <Block param=\"Hours\" number={hours} />\n          <Text>:</Text>\n        <Block param=\"Minutes\" number={minutes} />\n        <Text>:</Text>\n        <Block param=\"Seconds\" number={seconds} />\n      </Container>\n      <div align='center'>\n        <Button onClick={() => {\n          setTimeLeft(0)\n          setIsPaused(true);\n        }}\n        >\n          Reset\n        </Button>\n      </div>\n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}